{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/api/api-response.ts","webpack:///./src/app/core/api/api.service.ts","webpack:///./src/app/core/utils/user/user.service.ts","webpack:///./src/app/shared.module.ts","webpack:///./src/app/views/auth/auth.module.ts","webpack:///./src/app/views/auth/auth.routes.ts","webpack:///./src/app/views/auth/guard/auth.guard.ts","webpack:///./src/app/views/auth/login/login.component.html","webpack:///./src/app/views/auth/login/login.component.scss","webpack:///./src/app/views/auth/login/login.component.ts","webpack:///./src/app/views/auth/login/login.module.ts","webpack:///./src/app/views/error/error.module.ts","webpack:///./src/app/views/error/error.routes.ts","webpack:///./src/app/views/error/forbidden/forbidden.component.html","webpack:///./src/app/views/error/forbidden/forbidden.component.scss","webpack:///./src/app/views/error/forbidden/forbidden.component.ts","webpack:///./src/app/views/error/forbidden/forbidden.module.ts","webpack:///./src/app/views/error/internal/internal.component.html","webpack:///./src/app/views/error/internal/internal.component.scss","webpack:///./src/app/views/error/internal/internal.component.ts","webpack:///./src/app/views/error/internal/internal.module.ts","webpack:///./src/app/views/error/not-found/not-found.component.html","webpack:///./src/app/views/error/not-found/not-found.component.scss","webpack:///./src/app/views/error/not-found/not-found.component.ts","webpack:///./src/app/views/error/not-found/not-found.module.ts","webpack:///./src/app/views/main/home/home.component.html","webpack:///./src/app/views/main/home/home.component.scss","webpack:///./src/app/views/main/home/home.component.ts","webpack:///./src/app/views/main/home/home.module.ts","webpack:///./src/app/views/main/main.component.html","webpack:///./src/app/views/main/main.component.scss","webpack:///./src/app/views/main/main.component.ts","webpack:///./src/app/views/main/main.module.ts","webpack:///./src/app/views/main/main.routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACG;AACH;AACA;AAEvD,IAAM,MAAM,GACL,mEAAW,QAEX,mEAAW,EAEX,sEAAY,CAClB,CAAC;AAMF;IAAA;IACA,CAAC;IADY,gBAAgB;QAJ5B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;AClB7B,yG;;;;;;;;;;;ACAA,yBAAyB,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;ACAN;AAOxC;IALA;QAMI,UAAK,GAAG,KAAK,CAAC;IAClB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACM;AACA;AACU;AACH;AACE;AACF;AAgBtD;IAAA;IACA,CAAC;IADY,SAAS;QAdrB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;aACf;YACD,OAAO,EAAE;gBACL,2DAAY;gBACZ,oEAAgB;gBAChB,qEAAW;gBACX,kEAAU;gBACV,kEAAU;aACb;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;;;;;;ACtB6B;AACnB;AACK;AAErC;IAAA;IA4DA,CAAC;IA1DU,sBAAW,GAAlB,UAAmB,GAAG,EAAE,QAAQ,EAAE,WAAW;QACzC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,QAAQ,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,kEAAa,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtD,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,sBAAW,GAAlB,UAAmB,GAAG,EAAE,QAAQ,EAAE,UAAU;QACxC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,QAAQ,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC;QAED,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QAED,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,KAAK,CAAC;gBACF,oDAAU,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,8IAAgH;oBACtH,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,eAAK,IAAI,YAAK,EAAE,EAAP,CAAO;oBACxB,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBACH,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,oDAAU,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,oFAA2D;oBACjE,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,eAAK,IAAI,YAAK,EAAE,EAAP,CAAO;iBAC3B,CAAC,CAAC;gBACH,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,oDAAU,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO;oBACvB,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,eAAK,IAAI,YAAK,EAAE,EAAP,CAAO;iBAC3B,CAAC,CAAC;gBACH,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,oDAAU,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,wFAAmF;oBACzF,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,eAAK,IAAI,YAAK,EAAE,EAAP,CAAO;oBACxB,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;QACX,CAAC;QAED,MAAM,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChE0C;AAC6C;AAC7B;AAEf;AACa;AAEzD,IAAI,GAAO,CAAC;AACZ,IAAI,OAAY,CAAC;AACjB,IAAM,eAAe,GAAG;IACpB,cAAc,EAAE,kBAAkB;CACrC,CAAC;AAGF;IACI,oBAAmB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IACpC,CAAC;IAED;;;;;OAKG;IACH,wBAAG,GAAH,UAAI,OAAO,EAAE,OAAO;QAChB,GAAG,GAAG,OAAO,CAAC;QACd,OAAO,GAAG,OAAO,CAAC;IACtB,CAAC;IAED;;;;;;;QAOI;IACJ,yBAAI,GAAJ,UAAK,GAAW,EAAE,cAAuB,EAAE,MAAe,EAAE,OAAsC;QAAtC,sCAAsC;QAC9F,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;QACD,EAAE,CAAC,CAAC,GAAG,IAAI,cAAc,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC;QACpC,CAAC;QAED,IAAM,MAAM,GAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC;QAErD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,uCAAuC;YACvC,IAAM,MAAM,GAAQ,OAAO,CAAC,MAAM,CAAC,cAAI;gBACnC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC;YAEH,IAAI,UAAQ,GAAG,EAAE,CAAC;YAClB,sCAAsC;YACtC,MAAM,CAAC,GAAG,CAAC,cAAI;gBACX,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvE,UAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;gBACvB,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,OAAO,gBACR,eAAe,EAAK,OAAO,CAAC,OAAO,EAAK;gBACvC,QAAQ,EAAE,UAAQ;gBAClB,gBAAgB,EAAE,oEAAW,CAAC,QAAQ,EAAE;aAC3C,CACJ,CAAC;YAEF,MAAM,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC;aACzD,CAAC;QACN,CAAC;QAED,MAAM,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;IAC/C,CAAC;IAED;;;;;;;QAOI;IACJ,yBAAI,GAAJ,UAAK,MAAmC,EAAE,GAA6B,EAAE,OAAsC;QAAtC,sCAAsC;QAC3G,MAAM,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;SAC3C,CAAC;IACN,CAAC;IAED;;;;;;QAMI;IACJ,4BAAO,GAAP,UAAQ,MAAmC,EAAE,GAA6B,EAAE,OAAsC;QAAlH,iBA4CC;QA5C2E,sCAAsC;QAC9G,MAAM,CAAC,UAAC,IAAS;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,IAAM,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACrD,GAAG,GAAG,eAAe,CAAC,GAAG,CAAC;gBAC1B,IAAM,eAAe,GAAW,MAAM,CAAC,WAAW,EAAE,CAAC;gBAErD,EAAE,CAAC,CAAC,eAAe,KAAK,KAAK,IAAI,eAAe,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC5D,OAAO,CAAC,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAC9C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAC5C,CAAC;YACL,CAAC;YAED,uCAAuC;YAEvC,IAAM,MAAM,GAAG,IAAI,+DAAU,CAAC;gBAC1B,UAAU,EAAE,OAAO,CAAC,MAAM;aAC7B,CAAC,CAAC;YAEH,IAAM,OAAO,gBAAQ,eAAe,EAAK,OAAO,CAAC,OAAO,CAAE,CAAC;YAE3D,IAAM,WAAW,GAAQ,EAAE,CAAC;YAE5B,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACpC,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACpD,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;YAE5B,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,GAAG,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YAE5E,MAAM,CAAC;gBACH,SAAS,EAAE,UAAC,IAAK,EAAE,KAAM,EAAE,QAAS;oBAChC,MAAM,CAAC,KAAI,CAAC,KAAK;yBACZ,OAAO,CAAC,OAAO,CAAC;yBAChB,IAAI,CACD,0DAAG,CAAC,aAAG,IAAI,+DAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,EAAtD,CAAsD,CAAC,EAClE,iEAAU,CAAC,aAAG,IAAI,+DAAU,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,EAAtD,CAAsD,CAAC,EACzE,+DAAQ,CAAC,QAAQ,CAAC,CACrB;yBACA,SAAS,EAAE,CAAC;gBACrB,CAAC;aACJ,CAAC;QACN,CAAC,CAAC;IAEN,CAAC;IAED;;;;QAII;IACJ,oCAAe,GAAf,UAAgB,OAAO;QACnB,IAAI,UAAU,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAG;YACxB,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAED;;;;;QAKI;IACJ,iCAAY,GAAZ,UAAa,GAAG,EAAE,MAAM;QACpB,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAEvC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,aAAG;YACzB,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAI,GAAK,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC;YACH,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;YAClB,QAAQ,EAAE,IAAI;SACjB,CAAC;IACN,CAAC;IArKQ,UAAU;QADtB,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,UAAU,CAsKtB;IAAD,iBAAC;CAAA;AAtKsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdkB;AACN;AAC8B;AAEjE,IAAI,IAAI,GAAQ,EAAE,CAAC;AACnB,IAAI,KAAa,CAAC;AAClB,IAAI,IAAW,CAAC;AAEhB,IAAM,WAAW,GAAQ;IACrB,cAAc,EAAK,qEAAW,CAAC,aAAa,mBAAgB;IAC5D,WAAW,EAAK,qEAAW,CAAC,aAAa,gBAAa;CACzD,CAAC;AAGF;IAEI;IACA,CAAC;IAEa,eAAG,GAAjB;QACI,MAAM,CAAC;YACH,IAAI;YACJ,KAAK;SACR,CAAC;IACN,CAAC;IAEa,mBAAO,GAArB;QACI,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEa,mBAAO,GAArB,UAAsB,OAAO;QACzB,IAAI,GAAG,OAAO,CAAC;IACnB,CAAC;IAEa,mBAAO,GAArB,UAAsB,OAAO;QACzB,IAAI,GAAG,OAAO,CAAC;IACnB,CAAC;IAEa,mBAAO,GAArB;QACI,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEa,oBAAQ,GAAtB;QACI,MAAM,CAAC,kDAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IAEa,oBAAQ,GAAtB,UAAuB,QAAQ,EAAE,WAAqB;QAClD,KAAK,GAAG,QAAQ,CAAC;QACjB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IACvC,CAAC;IAEa,qBAAS,GAAvB;QACI,MAAM,CAAC;YACH,cAAc,EAAE,kDAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC;YACxD,WAAW,EAAE,kDAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC;SACrD,CAAC;IACN,CAAC;IAEa,qBAAS,GAAvB,UAAwB,KAAK,EAAE,WAAY;QACvC,kDAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAClF,kDAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,cAAc,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACnF,CAAC;IAEa,kBAAM,GAApB;QACI,IAAI,GAAG,IAAI,CAAC;QACZ,KAAK,GAAG,IAAI,CAAC;QACb,kDAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACzC,kDAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAChD,CAAC;IAtDQ,WAAW;QADvB,gEAAU,EAAE;;OACA,WAAW,CAuDvB;IAAD,kBAAC;CAAA;AAvDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdkC;AACjB;AACiB;AACb;AACW;AACT;AACK;AACM;AAc1D;IAAA;IACA,CAAC;IADY,YAAY;QAZxB,8DAAQ,CAAC;YACN,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACL,0DAAW;gBACX,uEAAa;gBACb,qDAAW;gBACX,qEAAgB;gBAChB,4DAAY;aACf;YACD,SAAS,EAAE,CAAC,0DAAgB,EAAE,gEAAU,EAAE,sEAAS,CAAC;YACpD,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,YAAY,CACxB;IAAD,mBAAC;CAAA;AADwB;;;;;;;;;;;;;;;;;;;;;;;;ACrBc;AACU;AACA;AAWjD;IAAA;IACA,CAAC;IADY,UAAU;QATtB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;gBACZ,+DAAW;aACd;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;;;;;ACZgC;AAEhD,IAAM,WAAW,GAAW;IAC/B,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC7C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLyC;AACwD;AAE5D;AAC6B;AACT;AACQ;AAGnE;IACI,mBAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;IAAI,CAAC;IAEhE,+BAAW,GAAX,UAAY,IAA4B,EAAE,KAA0B;QAChE,IAAM,OAAO,GAAG,yEAAW,CAAC,OAAO,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC;IACL,CAAC;IAED,+BAAW,GAAX;QAAA,iBA6BC;QA5BG,MAAM,CAAC,IAAI,OAAO,CAAU,iBAAO;YAC/B,IAAM,OAAO,GAAG,yEAAW,CAAC,SAAS,EAAE,CAAC;YAExC,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,IAAM,OAAO,GAAG;oBACZ,cAAc,EAAE,kBAAkB;oBAClC,gBAAgB,EAAE,OAAO,CAAC,cAAc;iBAC3C,CAAC;gBAEF,KAAI,CAAC,GAAG;qBACH,IAAI,CAAC,KAAK,EAAK,qEAAW,CAAC,QAAQ,mBAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;qBAC1E,IAAI,EAAE;qBACN,SAAS,CAAC,aAAG;oBACV,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;oBAC5B,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC1C,yEAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAC3D,yEAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACpC,yEAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,EAAE,UAAC,GAAG;oBACH,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBACtB,OAAO,CAAC,KAAK,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;gBAClC,OAAO,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAAW,GAAX,UAAY,GAAG;QACX,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG;gBACJ,IAAI,IAAI,SAAQ,CAAC;gBACjB,MAAM,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;oBACxB,KAAK,CAAC;wBACF,IAAI,GAAG,4DAA4D,CAAC;wBACpE,KAAK,CAAC;oBACV,KAAK,CAAC;wBACF,IAAI,GAAG,4BAA4B,CAAC;wBACpC,KAAK,CAAC;oBACV,KAAK,CAAC;wBACF,IAAI,GAAG,0CAA0C,CAAC;wBAClD,KAAK,CAAC;oBACV,KAAK,CAAC;wBACF,IAAI,GAAG,6CAA6C,CAAC;wBACrD,KAAK,CAAC;oBACV;wBACI,IAAI,GAAG,6CAA6C,CAAC;wBACrD,KAAK,CAAC;gBACd,CAAC;gBACD,oDAAU,CAAC,IAAI,CAAC;oBACZ,IAAI;oBACJ,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,eAAK,IAAI,YAAK,EAAE,EAAP,CAAO;iBAC3B,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC;YACV,KAAK,GAAG;gBACJ,oDAAU,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,8DAA8D;oBACpE,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,eAAK,IAAI,YAAK,EAAE,EAAP,CAAO;iBAC3B,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAnFQ,SAAS;QADrB,gEAAU,EAAE;yCAEmB,sDAAM,EAAe,gEAAU;OADlD,SAAS,CAoFrB;IAAD,gBAAC;CAAA;AApFqB;;;;;;;;;;;;ACTtB,osCAAosC,EAAE,sRAAsR,oCAAoC,+WAA+W,4CAA4C,0bAA0b,4CAA4C,2uCAA2uC,gRAAgR,+FAA+F,qBAAqB,qIAAqI,WAAW,sJAAsJ,WAAW,yEAAyE,YAAY,q8BAAq8B,4CAA4C,4pEAA4pE,WAAW,khBAAkhB,WAAW,suBAAsuB,oBAAoB,26BAA26B,qEAAqE,4vDAA4vD,mEAAmE,onDAAonD,8EAA8E,kuC;;;;;;;;;;;ACAtxa,qSAAqS,iBAAiB,EAAE,SAAS,oEAAoE,2BAA2B,kBAAkB,wBAAwB,4BAA4B,EAAE,iBAAiB,uBAAuB,kBAAkB,EAAE,uBAAuB,qBAAqB,EAAE,yBAAyB,2BAA2B,yBAAyB,EAAE,sCAAsC,6BAA6B,EAAE,uCAAuC,0BAA0B,+BAA+B,EAAE,qCAAqC,0BAA0B,EAAE,yCAAyC,wBAAwB,EAAE,8CAA8C,+BAA+B,EAAE,yKAAyK,4BAA4B,EAAE,0JAA0J,8BAA8B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp0C;AACtC;AACF;AACW;AACQ;AACC;AAC3B;AAOzC;IAcI,wBAAoB,YAAmB,EAC3B,MAAc,EACd,OAAmB,EACnB,GAAe;QAHP,iBAAY,GAAZ,YAAY,CAAO;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAY;QACnB,QAAG,GAAH,GAAG,CAAY;QACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG;YACR,gBAAgB,EAAE,IAAI;SACzB,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,qEAAW,CAAC,aAAa,CAAC;IACjD,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;IAC1D,CAAC;IAED,wCAAe,GAAf;QACI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IACjD,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAa;QAClB,MAAM,CAAC,iDAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAI,EAAE,IAAI;QAAlB,iBAkCC;QAjCG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;YACxC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,GAAG;aACH,IAAI,CAAC,MAAM,EAAK,qEAAW,CAAC,QAAQ,iBAAc,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC9E,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC7B,SAAS,CAAC,aAAG;YACV,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE;gBAC/C,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,gBAAgB,EAAE,IAAI;aACzB,CAAC,CAAC;YAEH,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAChC,KAAI,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC,EAAE,UAAC,GAAG;YACH,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,KAAK,GAAG;oBACJ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBACpD,KAAK,CAAC;YACd,CAAC;QACL,CAAC,EAAE;YACC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IAEX,CAAC;IAED,8BAAK,GAAL,UAAM,IAAI,EAAE,IAAI;QAAhB,iBAmDC;QAlDG,IAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAEjF,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAClC,eAAe,CAAC,KAAK,EAAE,CAAC;YACxB,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,GAAG;aACH,IAAI,CAAC,MAAM,EAAK,qEAAW,CAAC,QAAQ,WAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACxE,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;aAChD,SAAS,CAAC,aAAG;YACV,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YAC5B,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YAC1C,yEAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC3D,yEAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACpC,yEAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAClC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,EAAE,UAAC,GAAG;YACH,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,KAAK,GAAG;oBACJ,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;wBAC9B,KAAK,CAAC;4BACF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;4BACvD,eAAe,CAAC,KAAK,EAAE,CAAC;4BACxB,KAAK,CAAC;wBACV,KAAK,CAAC;4BACF,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BAChC,IAAI,CAAC,KAAK,EAAE,CAAC;4BACb,KAAK,CAAC;wBACV,KAAK,CAAC;4BACF,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;4BAC7C,OAAO,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC;4BAChC,KAAI,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;4BACzC,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BAChC,IAAI,CAAC,KAAK,EAAE,CAAC;4BACb,KAAK,CAAC;wBACV,KAAK,CAAC;4BACF,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BAChC,IAAI,CAAC,KAAK,EAAE,CAAC;4BACb,KAAK,CAAC;oBACd,CAAC;oBACD,KAAK,CAAC;YACd,CAAC;QACL,CAAC,EAAE;YACC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,uCAAc,GAAd,UAAe,IAAI,EAAE,IAAI;QAAzB,iBAkDC;QAjDG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/B,CAAC,aAAa,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC,OAAO,CAAC,eAAK;gBAC1D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;gBACrC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,kCAAkC,CAAC,CAAC,KAAK,EAAE,CAAC;YACrF,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,GAAG;aACH,IAAI,CAAC,MAAM,EAAK,qEAAW,CAAC,QAAQ,yBAAsB,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACtF,IAAI,CAAC;YACF,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;SAClD,CAAC;aACD,SAAS,CAAC,aAAG;YACV,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAChC,UAAU,CAAC;gBACP,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,EAAE,UAAC,GAAG;YACH,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,KAAK,GAAG;oBACJ,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;oBACpC,KAAK,CAAC;gBACV,KAAK,GAAG;oBACJ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC7D,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;oBACnC,KAAK,CAAC;gBACV,KAAK,GAAG;oBACJ,oDAAU,CAAC,IAAI,CAAC;wBACZ,IAAI,EAAE,uCAAuC;wBAC7C,UAAU,EAAE,eAAe;wBAC3B,MAAM,EAAE,eAAK;4BACT,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BAChC,IAAI,CAAC,KAAK,EAAE,CAAC;4BACb,KAAK,EAAE,CAAC;wBACZ,CAAC;qBACJ,CAAC,CAAC;oBACH,KAAK,CAAC;YACd,CAAC;QACL,CAAC,EAAE;YACC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,iDAAwB,GAAxB,UAAyB,IAAI;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC3E,UAAU,CAAC,cAAM,WAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAA5D,CAA4D,CAAC,CAAC;QACnF,CAAC;IACL,CAAC;IAED,qCAAY,GAAZ,UAAa,QAAQ,EAAE,SAAU;QAAjC,iBAIC;QAHG,UAAU,CAAC;YACP,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;QAC/D,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,oCAAW,GAAX;QACI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;IAC5C,CAAC;IAxLuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;;qDAAW;IACV;QAAvB,+DAAS,CAAC,WAAW,CAAC;;qDAAW;IAXzB,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;;SAGxB,CAAC;yCAeoC,+DAAK;YACnB,sDAAM;YACL,wDAAU;YACd,gEAAU;OAjBlB,cAAc,CAqM1B;IAAD,qBAAC;CAAA;AArM0B;;;;;;;;;;;;;;;;;;;;;;;;ACboC;AACd;AACG;AAWpD;IAAA;IACA,CAAC;IADY,WAAW;QATvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;aACf;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,+DAAc,CAAC;YAC9B,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,oEAAsB,CAAC;SACpC,CAAC;OACW,WAAW,CACvB;IAAD,kBAAC;CAAA;AADuB;;;;;;;;;;;;;;;;;;;;;;;;;ACbe;AACqB;AACF;AACG;AAY7D;IAAA;IACA,CAAC;IADY,WAAW;QAVvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,0EAAc;gBACd,wEAAc;gBACd,2EAAe;aAClB;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,EAAE;YAChB,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,WAAW,CACvB;IAAD,kBAAC;CAAA;AADuB;;;;;;;;;;;;;;;;;;ACd0C;AACF;AACG;AAE5D,IAAM,YAAY,GAAW;IAChC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gFAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAC;IAClD,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAC;CACxC,CAAC;;;;;;;;;;;;ACVF,6C;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AAOhD;IAEI;IAEA,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAPQ,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;;SAG5B,CAAC;;OACW,kBAAkB,CAS9B;IAAD,yBAAC;CAAA;AAT8B;;;;;;;;;;;;;;;;;;;;;;;;ACPQ;AACkB;AACL;AAUpD;IAAA;IACA,CAAC;IADY,eAAe;QAR3B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;aACf;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,uEAAkB,CAAC;YAClC,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,eAAe,CAC3B;IAAD,sBAAC;CAAA;AAD2B;;;;;;;;;;;;ACZ5B,4C;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AAOhD;IAEI;IAEA,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAPQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;;OACW,iBAAiB,CAS7B;IAAD,wBAAC;CAAA;AAT6B;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AACgB;AACH;AAUpD;IAAA;IACA,CAAC;IADY,cAAc;QAR1B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;aACf;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,qEAAiB,CAAC;YACjC,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;ACZ3B,uC;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AAOhD;IAEI;IACA,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IANQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;;SAG5B,CAAC;;OACW,iBAAiB,CAQ7B;IAAD,wBAAC;CAAA;AAR6B;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AACiB;AACJ;AAUpD;IAAA;IACA,CAAC;IADY,cAAc;QAR1B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;aACf;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,sEAAiB,CAAC;YACjC,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;ACZ3B,mB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA8D;AACjB;AACK;AAOlD;IACI,uBAAoB,YAAmB,EAC3B,cAAgC;QADxB,iBAAY,GAAZ,YAAY,CAAO;QAC3B,mBAAc,GAAd,cAAc,CAAkB;IAC5C,CAAC;IAED,gCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC9C,CAAC;IARQ,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAEoC,+DAAK;YACX,0DAAgB;OAFnC,aAAa,CASzB;IAAD,oBAAC;CAAA;AATyB;;;;;;;;;;;;;;;;;;;;;;;;ACTqC;AACX;AACL;AAW/C;IAAA;IACA,CAAC;IADY,UAAU;QATtB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;aACf;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,6DAAa,CAAC;YAC7B,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,oEAAsB,CAAC;SACpC,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;ACbvB,6bAA6b,OAAO,yaAAya,gOAAgO,uEAAuE,qBAAqB,0yBAA0yB,cAAc,gUAAgU,gOAAgO,kDAAkD,sBAAsB,mEAAmE,WAAW,uN;;;;;;;;;;;ACAvpF,iEAAiE,eAAe,EAAE,gCAAgC,gBAAgB,iBAAiB,uBAAuB,kBAAkB,4BAA4B,wBAAwB,gCAAgC,2BAA2B,iBAAiB,oBAAoB,8BAA8B,8BAA8B,8BAA8B,8BAA8B,EAAE,8BAA8B,kBAAkB,wBAAwB,EAAE,+BAA+B,gBAAgB,iBAAiB,uBAAuB,kBAAkB,4BAA4B,wBAAwB,gCAAgC,2BAA2B,iBAAiB,oBAAoB,8BAA8B,8BAA8B,8BAA8B,8BAA8B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA10B;AACf;AACc;AACC;AACxB;AAOzC;IAOI,uBAAoB,YAAmB,EAC3B,cAAgC,EAChC,MAAc;QAF1B,iBAgBC;QAhBmB,iBAAY,GAAZ,YAAY,CAAO;QAC3B,mBAAc,GAAd,cAAc,CAAkB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACtB,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACjC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG;YACd,EAAE,EAAE,KAAK;YACT,QAAQ,EAAE,OAAO;YACjB,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,MAAM;SACf,CAAC;QAEF,IAAI,CAAC,IAAI,GAAG,yEAAW,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,yEAAW,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;IAED,gCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC;QAC/E;;;;;;aAMK;IACT,CAAC;IAED,uCAAe,GAAf;IACA,CAAC;IAED,gCAAQ,GAAR,UAAS,KAAK;QACV,MAAM,CAAC,iDAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,8BAAM,GAAN;QACI,yEAAW,CAAC,MAAM,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,+BAAO,GAAP;QACI,MAAM,CAAC;YACH;gBACI,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,IAAI;gBACd,GAAG,EAAE,aAAa;gBAClB,IAAI,EAAE,aAAa;aACtB;YACD;gBACI,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,IAAI;gBACd,GAAG,EAAE,QAAQ;gBACb,IAAI,EAAE,QAAQ;aACjB;YACD;gBACI,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,IAAI;gBACd,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,aAAa;aACtB;YACD;gBACI,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,IAAI;gBACd,GAAG,EAAE,QAAQ;gBACb,IAAI,EAAE,QAAQ;aACjB;SACJ,CAAC;IACN,CAAC;IA9EQ,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAQoC,+DAAK;YACX,0DAAgB;YACxB,sDAAM;OATjB,aAAa,CA+EzB;IAAD,oBAAC;CAAA;AA/EyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACU;AACF;AACgB;AACjB;AAWhD;IAAA;IACA,CAAC;IADY,UAAU;QATtB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,2DAAY;gBACZ,4DAAU;aACb;YACD,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,6DAAa,CAAC;YAC7B,SAAS,EAAE,CAAC,yEAAW,CAAC;SAC3B,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;;;;;;;ACd0B;AACI;AACC;AAE/C,IAAM,WAAW,GAAW,CAAC;QAChC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,WAAW,EAAE,CAAC,gEAAS,CAAC;QACxB,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;SACzC;KACJ,CAAC,CAAC;;;;;;;;;;;;;;ACZH;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,UAAU;IACV,aAAa,EAAE,SAAS;IACxB,WAAW;IACX,QAAQ,EAAE,uBAAuB;IACjC,aAAa,EAAE,IAAI,CAAC,0CAA0C;CACjE,CAAC;;;;;;;;;;;;;;;;;;ACZ6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ERROR_ROUTES } from './views/error/error.routes';\r\nimport { AUTH_ROUTES } from './views/auth/auth.routes';\r\nimport { MAIN_ROUTES } from './views/main/main.routes';\r\n\r\nconst routes: Routes = [\r\n    ...AUTH_ROUTES,\r\n    // Your routes here\r\n    ...MAIN_ROUTES,\r\n    // Errors aplication\r\n    ...ERROR_ROUTES\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n<ui-snackbar-container></ui-snackbar-container>\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    title = 'app';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared.module';\r\nimport { ErrorModule } from './views/error/error.module';\r\nimport { MainModule } from './views/main/main.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from './views/auth/auth.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        SharedModule,\r\n        AppRoutingModule,\r\n        ErrorModule,\r\n        MainModule,\r\n        AuthModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {HttpEventType} from '@angular/common/http';\r\nimport {throwError} from 'rxjs';\r\nimport {UiSnackbar} from 'ng-smn-ui';\r\n\r\nexport class ApiReponse {\r\n\r\n    static extractData(res, callback, cleanResult) {\r\n        if (!callback) {\r\n            return;\r\n        }\r\n\r\n        if (cleanResult) {\r\n            callback(res);\r\n        }\r\n\r\n        if (res.type === HttpEventType.Response && !cleanResult) {\r\n            callback(res.body);\r\n        }\r\n    }\r\n\r\n    static handleError(res, callback, cleanError) {\r\n        if (callback) {\r\n            callback(res);\r\n        }\r\n\r\n        if (cleanError) {\r\n            return throwError(res);\r\n        }\r\n\r\n        switch (res.status) {\r\n            case 0:\r\n                UiSnackbar.show({\r\n                    text: `Um de nossos serviços está fora do ar e não foi possível processar sua requisição. Tente novamente mais tarde.`,\r\n                    actionText: 'OK',\r\n                    action: close => close(),\r\n                    duration: 1000\r\n                });\r\n                break;\r\n            case 400:\r\n                UiSnackbar.show({\r\n                    text: `Requisição inválida. Verifique as informações fornecidas.`,\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                break;\r\n            case 409:\r\n                UiSnackbar.show({\r\n                    text: res.error.message,\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                break;\r\n            case 500:\r\n                UiSnackbar.show({\r\n                    text: `Ocorreu um erro interno. Já fomos informados do erro. Tente novamente mais tarde.`,\r\n                    actionText: 'OK',\r\n                    action: close => close(),\r\n                    duration: 1000\r\n                });\r\n        }\r\n\r\n        return throwError(res);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { catchError, finalize, map } from 'rxjs/operators';\r\nimport { ApiServiceRequest, ApiServiceRequestOptions } from './api-request';\r\nimport { ApiReponse } from './api-response';\r\nimport { UserService } from '../utils/user/user.service';\r\n\r\nlet API: {};\r\nlet OPTIONS: any;\r\nconst DEFAULT_HEADERS = {\r\n    'Content-Type': 'application/json'\r\n};\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(public _http: HttpClient) {\r\n    }\r\n\r\n    /**\r\n     * Atribui o valor dos métodos e dos headers no serviço\r\n     * @param methods {object} - Métodos retornados da API\r\n     * @param options {object} - Opções do menu\r\n     * @return {void}\r\n    **/\r\n    set(methods, options) {\r\n        API = methods;\r\n        OPTIONS = options;\r\n    }\r\n\r\n    /**\r\n     * Configura uma requisão através dos métodos retornados da API\r\n     * @param api {string} - API que será chamada\r\n     * @param funcionalidade {string} - Funcionalidade que será chamada\r\n     * @param metodo {string} - Método que será chamado\r\n     * @param options {object} - Opções adicionais para requisição\r\n     * @return Function\r\n     **/\r\n    prep(api: string, funcionalidade?: string, metodo?: string, options: ApiServiceRequestOptions = {}) {\r\n        if (api && !funcionalidade) {\r\n            return API[api];\r\n        }\r\n        if (api && funcionalidade && !metodo) {\r\n            return API[api][funcionalidade];\r\n        }\r\n\r\n        const method: any = API[api][funcionalidade][metodo];\r\n\r\n        if (method) {\r\n            // Retornando todas as APIs que tem url\r\n            const option: any = OPTIONS.filter(item => {\r\n                return item.url ? item.url.replace('/', '') : item.url === location.pathname.replace('/', '');\r\n            });\r\n\r\n            let idOption = '';\r\n            // Encontrando a opção da página atual\r\n            option.map(item => {\r\n                if (location.pathname.substring(1).indexOf(item.url.substring(1)) !== -1) {\r\n                    idOption = item.id;\r\n                }\r\n            });\r\n\r\n            options.headers = {\r\n                ...DEFAULT_HEADERS, ...options.headers, ...{\r\n                    'Option': idOption,\r\n                    'Authentication': UserService.getToken()\r\n                }\r\n            };\r\n\r\n            return {\r\n                call: this.request(method.method, method.url, options)\r\n            };\r\n        }\r\n\r\n        throw { message: 'Método não encontrado' };\r\n    }\r\n\r\n    /**\r\n     * Configura um requisição HTTP\r\n     * @param method {string} - Tipo da requisição\r\n     * @param url {string} - Url da API que será chamada\r\n     * @param options {object} - Opções adicionais para requisição\r\n     * Os parâmetros tipos reais dos parâmetros podem ser encontrados no arquivo irmão(api-request.ts)\r\n     * @return function\r\n     **/\r\n    http(method: ApiServiceRequest['method'], url: ApiServiceRequest['url'], options: ApiServiceRequestOptions = {}) {\r\n        return {\r\n            call: this.request(method, url, options)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Efetua a requisição em uma API\r\n     * @param method {string} - Tipo da requisição\r\n     * @param url {string} - Url da API que será chamada\r\n     * @param options {object} - Opções adicionais para requisição\r\n     * @return function\r\n     **/\r\n    request(method: ApiServiceRequest['method'], url: ApiServiceRequest['url'], options: ApiServiceRequestOptions = {}) {\r\n        return (data?: {}) => {\r\n            if (data) {\r\n                const paramsFormatted = this.formatParams(url, data);\r\n                url = paramsFormatted.url;\r\n                const methodFormatted: string = method.toUpperCase();\r\n\r\n                if (methodFormatted === 'GET' || methodFormatted === 'DELETE') {\r\n                    options.params = paramsFormatted.leftover;\r\n                } else {\r\n                    options.body = paramsFormatted.leftover;\r\n                }\r\n            }\r\n\r\n            // url = url.replace('7.37', '10.203');\r\n\r\n            const params = new HttpParams({\r\n                fromObject: options.params\r\n            });\r\n\r\n            const headers = { ...DEFAULT_HEADERS, ...options.headers };\r\n\r\n            const httpOptions: any = {};\r\n\r\n            Object.assign(httpOptions, options);\r\n            httpOptions.headers = this.generateHeaders(headers);\r\n            httpOptions.params = params;\r\n\r\n            const request = new HttpRequest(method, url, httpOptions.body, httpOptions);\r\n\r\n            return {\r\n                subscribe: (next?, error?, complete?) => {\r\n                    return this._http\r\n                        .request(request)\r\n                        .pipe(\r\n                            map(res => ApiReponse.extractData(res, next, options.cleanResult)),\r\n                            catchError(res => ApiReponse.handleError(res, error, options.cleanError)),\r\n                            finalize(complete)\r\n                        )\r\n                        .subscribe();\r\n                }\r\n            };\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * Constroi os Headers de uma requisição\r\n     * @param headers {object} - Headers a serem incluidos na requisição\r\n     * @return {HttpHeaders}\r\n     **/\r\n    generateHeaders(headers) {\r\n        let newHeaders = new HttpHeaders();\r\n        Object.keys(headers).map(key => {\r\n            newHeaders = newHeaders.set(key, headers[key]);\r\n        });\r\n\r\n        return newHeaders;\r\n    }\r\n\r\n    /**\r\n     * Insere os parâmetros na url e retornando a url final e o restante dos valores\r\n     * @param url {string} - Url a ser formatada\r\n     * @param params - Parâmetros, Query Strings e Body da requisição\r\n     * @return {object}\r\n     **/\r\n    formatParams(url, params) {\r\n        const data = Object.assign({}, params);\r\n\r\n        url = url.split('/');\r\n        Object.keys(data).forEach(key => {\r\n            const indexOf = url.indexOf(`:${key}`);\r\n            if (indexOf !== -1) {\r\n                url[indexOf] = data[key];\r\n                delete data[key];\r\n            }\r\n        });\r\n\r\n        return {\r\n            url: url.join('/'),\r\n            leftover: data\r\n        };\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {UiCookie} from 'ng-smn-ui';\r\nimport {environment} from '../../../../environments/environment';\r\n\r\nlet user: any = {};\r\nlet token: string;\r\nlet menu: any[];\r\n\r\nconst COOKIE_NAME: any = {\r\n    authentication: `${environment.SYSTEM_PREFIX}Authentication`,\r\n    keepConnect: `${environment.SYSTEM_PREFIX}KeepConnect`\r\n};\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public static get() {\r\n        return {\r\n            user,\r\n            token\r\n        };\r\n    }\r\n\r\n    public static getUser() {\r\n        return user;\r\n    }\r\n\r\n    public static setUser(newUser) {\r\n        user = newUser;\r\n    }\r\n\r\n    public static setMenu(newMenu) {\r\n        menu = newMenu;\r\n    }\r\n\r\n    public static getMenu() {\r\n        return menu;\r\n    }\r\n\r\n    public static getToken() {\r\n        return UiCookie.get(COOKIE_NAME.authentication);\r\n    }\r\n\r\n    public static setToken(newToken, keepConnect?: boolean) {\r\n        token = newToken;\r\n        this.setCookie(token, keepConnect);\r\n    }\r\n\r\n    public static getCookie() {\r\n        return {\r\n            authentication: UiCookie.get(COOKIE_NAME.authentication),\r\n            keepConnect: UiCookie.get(COOKIE_NAME.keepConnect)\r\n        };\r\n    }\r\n\r\n    public static setCookie(token, keepConnect?) {\r\n        UiCookie.set(COOKIE_NAME.keepConnect, keepConnect, keepConnect ? 365 : null, '/');\r\n        UiCookie.set(COOKIE_NAME.authentication, token, keepConnect ? 365 : null, '/');\r\n    }\r\n\r\n    public static remove() {\r\n        user = null;\r\n        token = null;\r\n        UiCookie.delete(COOKIE_NAME.keepConnect);\r\n        UiCookie.delete(COOKIE_NAME.authentication);\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { SMNUIModule, UiToolbarService } from 'ng-smn-ui';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApiService } from './core/api/api.service';\r\nimport { AuthGuard } from './views/auth/guard/auth.guard';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    exports: [\r\n        FormsModule,\r\n        BrowserModule,\r\n        SMNUIModule,\r\n        HttpClientModule,\r\n        RouterModule\r\n    ],\r\n    providers: [UiToolbarService, ApiService, AuthGuard],\r\n    bootstrap: []\r\n})\r\nexport class SharedModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {LoginModule} from './login/login.module';\r\nimport {SharedModule} from '../../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        LoginModule\r\n    ],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class AuthModule {\r\n}\r\n","import {Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\n\r\nexport const AUTH_ROUTES: Routes = [\r\n    {path: 'login', component: LoginComponent}\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UiSnackbar } from 'ng-smn-ui';\r\nimport { UserService } from '../../../core/utils/user/user.service';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router, private api: ApiService) { }\r\n\r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        const usuario = UserService.getUser();\r\n        if (usuario.id) {\r\n            return true;\r\n        } else {\r\n            return this.remakeLogin();\r\n        }\r\n    }\r\n\r\n    remakeLogin(): any {\r\n        return new Promise<boolean>(resolve => {\r\n            const cookies = UserService.getCookie();\r\n\r\n            if (cookies.authentication) {\r\n                const headers = {\r\n                    'Content-Type': 'application/json',\r\n                    'Authentication': cookies.authentication\r\n                };\r\n\r\n                this.api\r\n                    .http('GET', `${environment.AUTH_API}/login/refazer`, { headers: headers })\r\n                    .call()\r\n                    .subscribe(res => {\r\n                        const content = res.content;\r\n                        this.api.set(content.api, content.opcoes);\r\n                        UserService.setToken(content.token, !!cookies.keepConnect);\r\n                        UserService.setMenu(content.opcoes);\r\n                        UserService.setUser(content.user);\r\n                        resolve(true);\r\n                    }, (res) => {\r\n                        this.handleError(res);\r\n                        resolve(false);\r\n                    });\r\n            } else {\r\n                this.handleError({ status: 401 });\r\n                resolve(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleError(res): any {\r\n        switch (res.status) {\r\n            case 401:\r\n                let text: string;\r\n                switch (res.executionCode) {\r\n                    case 2:\r\n                        text = 'Parece que sua senha está incorreta, tente refazer o login';\r\n                        break;\r\n                    case 3:\r\n                        text = 'Seu usuário está bloqueado';\r\n                        break;\r\n                    case 4:\r\n                        text = 'Sua senha expirou, tente refazer o login';\r\n                        break;\r\n                    case 5:\r\n                        text = 'Você está bloqueado à acessar neste horário';\r\n                        break;\r\n                    default:\r\n                        text = 'Seu login expirou. Refaça o login novamente';\r\n                        break;\r\n                }\r\n                UiSnackbar.show({\r\n                    text,\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                this.router.navigate(['/login']);\r\n                break;\r\n            case 403:\r\n                this.router.navigate(['/forbidden']);\r\n                break;\r\n            case 404:\r\n                UiSnackbar.show({\r\n                    text: 'Não conseguimos encontrar seu usuário, tente refazer o login',\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                this.router.navigate(['/login']);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"core\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n        <!-- <img src=\\\"assets/images/logotipo-transparente.png\\\" alt=\\\"Cronos logo\\\" title=\\\"Cronos logo\\\" style=\\\"margin-left: -16px\\\"> -->\\r\\n    </div>\\r\\n    <ui-card>\\r\\n        <div class=\\\"ui-progress accent\\\" [class.hide]=\\\"!loading\\\">\\r\\n            <div class=\\\"indeterminate\\\"></div>\\r\\n        </div>\\r\\n        <ui-tabs-pages #tabsPages>\\r\\n            <div class=\\\"page pre-info\\\">\\r\\n                <form #preLoginForm=\\\"ngForm\\\" class=\\\"ui-validate on-submit on-dirty\\\" (submit)=\\\"getInfo(preLoginForm, preLogin)\\\">\\r\\n                    <ui-card-title>Inicie sua sessão</ui-card-title>\\r\\n                    <ui-card-content>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"authByEmail ? 'email' : 'text'\\\"\\r\\n                                   name=\\\"usuario\\\"\\r\\n                                   [(ngModel)]=\\\"preLogin.usuario\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   #preLoginUsuario=\\\"ngModel\\\"\\r\\n                                   [pattern]=\\\"authByEmail ? '[a-z0-9!#$%&\\\\'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\\\\\\\\.[a-z0-9-]+)*' : null\\\"\\r\\n                                   id=\\\"pre-login-usuario\\\"\\r\\n                                   class=\\\"accent\\\"\\r\\n                                   autofocus>\\r\\n                            <label for=\\\"pre-login-usuario\\\">{{authByEmail ? 'E-mail' : 'Usuário'}}</label>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"preLoginUsuario.errors && preLoginUsuario.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!preLoginUsuario.pristine && !preLoginUsuario.errors.required\\\">\\r\\n                                        Use seu {{authByEmail ? 'e-mail' : 'nome de usuário'}}\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!preLoginUsuario.errors.pattern\\\">\\r\\n                                        Use um e-mail válido\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!preLoginUsuario.errors.notFound\\\">\\r\\n                                        Este {{authByEmail ? 'e-mail' : 'nome de usuário'}} não existe\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                    </ui-card-content>\\r\\n                    <div class=\\\"ui-button-container cover\\\">\\r\\n                        <button class=\\\"ui-button accent full\\\" uiRipple>Próximo</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"page\\\">\\r\\n                <form #loginForm=\\\"ngForm\\\" class=\\\"ui-validate on-submit on-dirty\\\" (submit)=\\\"login(loginForm, info)\\\">\\r\\n                    <fieldset>\\r\\n                        <ui-toolbar class=\\\"flat\\\">\\r\\n                            <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"backToLogin()\\\">\\r\\n                                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                            </button>\\r\\n                        </ui-toolbar>\\r\\n                        <ul class=\\\"ui-list no-active\\\" [class.multi-line]=\\\"authByEmail\\\" style=\\\"padding: 0\\\">\\r\\n                            <li>\\r\\n                                <div class=\\\"avatar\\\"\\r\\n                                     [ngStyle]=\\\"{'background-image': info.imagem ? 'url(' + info.imagem + ')' : '',\\r\\n                                                 'background-color': info.imagem ? 'white' : info.cor,\\r\\n                                                 'color': isBright(info.cor) ? 'black': 'white'}\\\">\\r\\n                                    <span *ngIf=\\\"info && !info.imagem && info.nome\\\">{{info.nome.charAt(0)}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"primary\\\" *ngIf=\\\"!authByEmail\\\">{{info.nome}}</div>\\r\\n                                <div class=\\\"lines\\\" *ngIf=\\\"authByEmail\\\">\\r\\n                                    <div class=\\\"primary\\\">{{info.nome}}</div>\\r\\n                                    <div class=\\\"secondary\\\">{{info.email}}</div>\\r\\n                                </div>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <ui-card-content>\\r\\n                            <ui-input-container>\\r\\n                                <input [type]=\\\"typeText ? 'text' : 'password'\\\"\\r\\n                                       [(ngModel)]=\\\"info.senha\\\"\\r\\n                                       uiInput\\r\\n                                       required\\r\\n                                       name=\\\"senha\\\"\\r\\n                                       #loginSenha=\\\"ngModel\\\"\\r\\n                                       id=\\\"login-senha\\\"\\r\\n                                       class=\\\"accent\\\">\\r\\n                                <label>Senha</label>\\r\\n                                <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"typeText = !typeText\\\" uiRipple>\\r\\n                                    <i class=\\\"material-icons light\\\">{{typeText ? 'visibility_off' : 'visibility'}}</i>\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-messages\\\">\\r\\n                                    <div *ngIf=\\\"loginSenha.errors && loginSenha.dirty\\\">\\r\\n                                        <div class=\\\"ui-message error\\\" [hidden]=\\\"!loginSenha.pristine && !loginSenha.errors.required\\\">\\r\\n                                            Insira uma senha\\r\\n                                        </div>\\r\\n                                        <div class=\\\"ui-message error\\\" [hidden]=\\\"!loginSenha.errors.wrongPassword\\\">\\r\\n                                            Senha incorreta\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message counter\\\">\\r\\n                                        Esqueci minha senha\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </ui-input-container>\\r\\n                            <ui-option class=\\\"primary\\\" style=\\\"margin-top: 16px\\\">\\r\\n                                <input type=\\\"checkbox\\\"\\r\\n                                       [checked]=\\\"info.matenhaConectado\\\"\\r\\n                                       (change)=\\\"info.matenhaConectado = $event.target.checked\\\">\\r\\n                                <span>Manter conectado</span>\\r\\n                            </ui-option>\\r\\n                        </ui-card-content>\\r\\n                        <div class=\\\"ui-button-container cover\\\">\\r\\n                            <button class=\\\"ui-button accent full\\\" uiRipple>Login</button>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"page bloqueado\\\">\\r\\n                <ui-toolbar class=\\\"flat\\\">\\r\\n                    <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"tabsPages.pagesGoToPage(1)\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                    </button>\\r\\n                </ui-toolbar>\\r\\n                <ui-card-content>\\r\\n                    <div>{{info.nome}}, seu usuário está bloqueado.</div>\\r\\n                </ui-card-content>\\r\\n            </div>\\r\\n            <div class=\\\"page bloqueado-por-horario\\\">\\r\\n                <ui-toolbar class=\\\"flat\\\">\\r\\n                    <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"tabsPages.pagesGoToPage(1)\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                    </button>\\r\\n                </ui-toolbar>\\r\\n                <ui-card-content>\\r\\n                    <div>{{info.nome}}, você está bloqueado à acessar neste horário.</div>\\r\\n                </ui-card-content>\\r\\n            </div>\\r\\n            <div class=\\\"page senha-expirada\\\">\\r\\n                <ui-toolbar class=\\\"flat\\\">\\r\\n                    <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"tabsPages.pagesGoToPage(1)\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                    </button>\\r\\n                </ui-toolbar>\\r\\n                <form #senhaExpiradaForm=\\\"ngForm\\\" class=\\\"ui-validate on-submit on-dirty\\\" (submit)=\\\"redefinirSenha(senhaExpiradaForm, senhaExpirada)\\\">\\r\\n                    <ui-card-content>\\r\\n                        <div class=\\\"info-text secondary-text\\\">{{senhaExpirada.nome}}, por motivos de segurança expiramos sua senha. Por favor crie uma nova.</div>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"senhaExpirada.typeTextSenhaAntiga ? 'text' : 'password'\\\"\\r\\n                                   [(ngModel)]=\\\"senhaExpirada.senha\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   name=\\\"senhaAntiga\\\"\\r\\n                                   #senhaExpiradaAntiga=\\\"ngModel\\\"\\r\\n                                   id=\\\"senha-antiga\\\"\\r\\n                                   class=\\\"accent\\\">\\r\\n                            <label>Senha antiga</label>\\r\\n                            <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"senhaExpirada.typeTextSenhaAntiga = !senhaExpirada.typeTextSenhaAntiga\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons light\\\">{{senhaExpirada.typeTextSenhaAntiga ? 'visibility_off' : 'visibility'}}</i>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"senhaExpiradaAntiga.errors && senhaExpiradaAntiga.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaAntiga.pristine && !senhaExpiradaAntiga.errors.required\\\">\\r\\n                                        Insira uma senha\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaAntiga.errors.wrongPassword\\\">\\r\\n                                        Senha incorreta\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"senhaExpirada.typeTextNovaSenha ? 'text' : 'password'\\\"\\r\\n                                   [(ngModel)]=\\\"senhaExpirada.novaSenha\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   name=\\\"novaSenha\\\"\\r\\n                                   #senhaExpiradaNovaSenha=\\\"ngModel\\\"\\r\\n                                   (ngModelChange)=\\\"validarSenhasDivergentes(senhaExpiradaForm)\\\"\\r\\n                                   id=\\\"nova-senha\\\"\\r\\n                                   class=\\\"accent\\\">\\r\\n                            <label>Nova senha</label>\\r\\n                            <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"senhaExpirada.typeTextNovaSenha = !senhaExpirada.typeTextNovaSenha\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons light\\\">{{senhaExpirada.typeTextNovaSenha ? 'visibility_off' : 'visibility'}}</i>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"senhaExpiradaNovaSenha.errors && senhaExpiradaNovaSenha.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaNovaSenha.pristine && !senhaExpiradaNovaSenha.errors.required\\\">\\r\\n                                        Insira uma senha\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"senhaExpirada.typeTextConfirmacaoNovaSenha ? 'text' : 'password'\\\"\\r\\n                                   [(ngModel)]=\\\"senhaExpirada.confirmacaoNovaSenha\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   name=\\\"confirmacaoSenha\\\"\\r\\n                                   #senhaExpiradaConfirmacaoNovaSenha=\\\"ngModel\\\"\\r\\n                                   (ngModelChange)=\\\"validarSenhasDivergentes(senhaExpiradaForm)\\\"\\r\\n                                   id=\\\"confirmacao-nova-senha\\\"\\r\\n                                   class=\\\"accent\\\">\\r\\n                            <label>Confirmação de senha</label>\\r\\n                            <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"senhaExpirada.typeTextConfirmacaoNovaSenha = !senhaExpirada.typeTextConfirmacaoNovaSenha\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons light\\\">{{senhaExpirada.typeTextConfirmacaoNovaSenha ? 'visibility_off' : 'visibility'}}</i>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"senhaExpiradaConfirmacaoNovaSenha.errors && senhaExpiradaConfirmacaoNovaSenha.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaConfirmacaoNovaSenha.pristine && !senhaExpiradaConfirmacaoNovaSenha.errors.required\\\">\\r\\n                                        Insira uma senha\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaConfirmacaoNovaSenha.errors.notEqual\\\">\\r\\n                                        As senhas não conferem\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                    </ui-card-content>\\r\\n                    <div class=\\\"ui-button-container cover\\\">\\r\\n                        <button class=\\\"ui-button accent full\\\" uiRipple>Redefinir senha</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </ui-tabs-pages>\\r\\n    </ui-card>\\r\\n</div>\\r\\n\"","module.exports = \"/* https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves */\\n/* Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette */\\n/* https://material.io/guidelines/resources/shadows.html */\\n/deep/ app-root, :host {\\n  height: 100%; }\\n:host {\\n  background: url(\\\"/assets/images/login-background.jpg\\\") center;\\n  background-size: cover;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n:host > .core {\\n    max-width: 420px;\\n    width: 100%; }\\n:host > .core .logo {\\n      width: 280px; }\\n:host > .core ui-card {\\n      position: relative;\\n      overflow: hidden; }\\n:host > .core ui-card .ui-progress {\\n        position: absolute; }\\n:host > .core ui-card ui-card-title {\\n        font-size: 18px;\\n        padding: 32px 32px 0; }\\n:host > .core ui-card .ui-list li {\\n        padding: 0 24px; }\\n:host > .core ui-card ui-card-content {\\n        padding: 32px; }\\n:host > .core ui-card .ui-button-container {\\n        padding: 0 32px 32px; }\\n:host > .core ui-card .senha-expirada ui-card-content, :host > .core ui-card .bloqueado ui-card-content, :host > .core ui-card .bloqueado-por-horario ui-card-content {\\n        padding-top: 16px; }\\n:host > .core ui-card .senha-expirada .info-text, :host > .core ui-card .bloqueado .info-text, :host > .core ui-card .bloqueado-por-horario .info-text {\\n        margin-bottom: 24px; }\\n\"","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiColor, UiSnackbar } from 'ng-smn-ui';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { UserService } from '../../../core/utils/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n\r\n    headers: any;\r\n    preLogin: any;\r\n    info: any;\r\n    typeText: boolean;\r\n    loading: boolean;\r\n    authByEmail: boolean;\r\n    senhaExpirada: any;\r\n\r\n    @ViewChild('tabsPages') tabsPages;\r\n    @ViewChild('loginForm') loginForm;\r\n\r\n\r\n    constructor(private titleService: Title,\r\n        private router: Router,\r\n        private element: ElementRef,\r\n        private api: ApiService) {\r\n        this.preLogin = {};\r\n        this.info = {\r\n            matenhaConectado: true\r\n        };\r\n        this.senhaExpirada = {};\r\n        this.authByEmail = environment.AUTH_BY_EMAIL;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.headers = { 'Content-Type': 'application/json' };\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.titleService.setTitle('Cronos - Login');\r\n    }\r\n\r\n    isBright(color: string) {\r\n        return UiColor.isBright(color);\r\n    }\r\n\r\n    getInfo(form, info) {\r\n        console.log(info);\r\n\r\n        if (form.invalid || this.loading) {\r\n            form.controls.usuario.markAsTouched();\r\n            form.controls.usuario.markAsDirty();\r\n            this.focusElement('#pre-login-usuario');\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.api\r\n            .http('POST', `${environment.AUTH_API}/login/dados`, { headers: this.headers })\r\n            .call({ login: info.usuario })\r\n            .subscribe(res => {\r\n                res.content.user = Object.assign(res.content.user, {\r\n                    usuario: info.usuario,\r\n                    matenhaConectado: true\r\n                });\r\n\r\n                this.info = res.content.user;\r\n                this.tabsPages.pagesGoToPage(2);\r\n                this.focusElement('#login-senha', true);\r\n                this.loginForm.reset();\r\n            }, (res) => {\r\n                switch (res._status) {\r\n                    case 404:\r\n                        form.controls.usuario.setErrors({ notFound: true });\r\n                        break;\r\n                }\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n\r\n    }\r\n\r\n    login(form, info) {\r\n        const elementPassword = this.element.nativeElement.querySelector('#login-senha');\r\n\r\n        if (form.invalid || this.loading) {\r\n            form.controls.senha.markAsTouched();\r\n            form.controls.senha.markAsDirty();\r\n            elementPassword.focus();\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.api\r\n            .http('POST', `${environment.AUTH_API}/login`, { headers: this.headers })\r\n            .call({ login: info.usuario, senha: info.senha })\r\n            .subscribe(res => {\r\n                const content = res.content;\r\n                this.api.set(content.api, content.opcoes);\r\n                UserService.setToken(content.token, info.matenhaConectado);\r\n                UserService.setMenu(content.opcoes);\r\n                UserService.setUser(content.user);\r\n                this.router.navigate(['/']);\r\n            }, (res) => {\r\n                switch (res.status) {\r\n                    case 401:\r\n                        switch (res.error.executionCode) {\r\n                            case 2:\r\n                                form.controls.senha.setErrors({ wrongPassword: true });\r\n                                elementPassword.focus();\r\n                                break;\r\n                            case 3:\r\n                                this.tabsPages.pagesGoToPage(3);\r\n                                form.reset();\r\n                                break;\r\n                            case 4:\r\n                                this.senhaExpirada = Object.assign({}, info);\r\n                                delete this.senhaExpirada.senha;\r\n                                this.focusElement('#senha-antiga', true);\r\n                                this.tabsPages.pagesGoToPage(5);\r\n                                form.reset();\r\n                                break;\r\n                            case 5:\r\n                                this.tabsPages.pagesGoToPage(4);\r\n                                form.reset();\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    redefinirSenha(form, info) {\r\n        if (form.invalid || this.loading) {\r\n            ['senhaAntiga', 'novaSenha', 'confirmacaoSenha'].forEach(field => {\r\n                form.controls[field].markAsTouched();\r\n                form.controls[field].markAsDirty();\r\n            });\r\n            this.element.nativeElement.querySelector('.senha-expirada input.ng-invalid').focus();\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.api\r\n            .http('POST', `${environment.AUTH_API}/login/alterar-senha`, { headers: this.headers })\r\n            .call({\r\n                login: info.usuario,\r\n                senha: info.senha,\r\n                novaSenha: info.novaSenha,\r\n                confirmacaoNovaSenha: info.confirmacaoNovaSenha,\r\n            })\r\n            .subscribe(res => {\r\n                this.tabsPages.pagesGoToPage(2);\r\n                setTimeout(() => {\r\n                    this.senhaExpirada = {};\r\n                    form.reset();\r\n                }, 280);\r\n            }, (res) => {\r\n                switch (res._status) {\r\n                    case 400:\r\n                        this.validarSenhasDivergentes(form);\r\n                        break;\r\n                    case 401:\r\n                        form.controls.senhaAntiga.setErrors({ wrongPassword: true });\r\n                        this.focusElement('#senha-antiga');\r\n                        break;\r\n                    case 404:\r\n                        UiSnackbar.show({\r\n                            text: 'Não conseguimos encontrar seu usuário',\r\n                            actionText: 'Refazer login',\r\n                            action: close => {\r\n                                this.tabsPages.pagesGoToPage(1);\r\n                                form.reset();\r\n                                close();\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    validarSenhasDivergentes(form) {\r\n        if (this.senhaExpirada.novaSenha !== this.senhaExpirada.confirmacaoNovaSenha) {\r\n            setTimeout(() => form.controls.confirmacaoSenha.setErrors({ notEqual: true }));\r\n        }\r\n    }\r\n\r\n    focusElement(selector, withDelay?) {\r\n        setTimeout(() => {\r\n            this.element.nativeElement.querySelector(selector).focus();\r\n        }, withDelay ? 280 : 0);\r\n    }\r\n\r\n    backToLogin() {\r\n        this.tabsPages.pagesGoToPage(1);\r\n        this.focusElement('#pre-login-usuario');\r\n    }\r\n\r\n\r\n}\r\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\r\nimport {LoginComponent} from './login.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [LoginComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class LoginModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NotFoundModule} from './not-found/not-found.module';\r\nimport {InternalModule} from './internal/internal.module';\r\nimport {ForbiddenModule} from \"./forbidden/forbidden.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        NotFoundModule,\r\n        InternalModule,\r\n        ForbiddenModule\r\n    ],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class ErrorModule {\r\n}\r\n","import {Routes} from \"@angular/router\";\r\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\r\nimport {InternalComponent} from \"./internal/internal.component\";\r\nimport {ForbiddenComponent} from \"./forbidden/forbidden.component\";\r\n\r\nexport const ERROR_ROUTES: Routes = [\r\n    {path: 'internal', component: InternalComponent},\r\n    {path: 'not-found', component: NotFoundComponent},\r\n    {path: 'forbidden', component: ForbiddenComponent},\r\n    {path: '**', redirectTo: 'not-found'}\r\n];\r\n","module.exports = \"<p>Forbidden error</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-forbidden',\r\n    templateUrl: './forbidden.component.html',\r\n    styleUrls: ['./forbidden.component.scss']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {ForbiddenComponent} from './forbidden.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [ForbiddenComponent],\r\n    providers: [],\r\n})\r\nexport class ForbiddenModule {\r\n}\r\n","module.exports = \"<p>Internal error</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-internal',\r\n    templateUrl: './internal.component.html',\r\n    styleUrls: ['./internal.component.scss']\r\n})\r\nexport class InternalComponent implements OnInit {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {InternalComponent} from './internal.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [InternalComponent],\r\n    providers: [],\r\n})\r\nexport class InternalModule {\r\n}\r\n","module.exports = \"<p>Error 404</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NotFoundComponent} from './not-found.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [NotFoundComponent],\r\n    providers: [],\r\n})\r\nexport class NotFoundModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { UiToolbarService } from 'ng-smn-ui';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    constructor(private titleService: Title,\r\n        private toolbarService: UiToolbarService,) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('Home');\r\n        this.toolbarService.set('MedSafe - Home');\r\n    }\r\n}\r\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport {SharedModule} from \"../../../shared.module\";\r\nimport {HomeComponent} from './home.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [HomeComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class HomeModule {\r\n}\r\n","module.exports = \"<ui-toolbar class=\\\"fixed flat elevate-on-scroll primary elevate-on-s960\\\" id=\\\"app-header\\\">\\r\\n    <button (click)=\\\"menuOpen = true\\\" class=\\\"ui-button flat icon\\\" uiRipple>\\r\\n        <i class=\\\"material-icons\\\">menu</i>\\r\\n    </button>\\r\\n    <!-- <div class=\\\"logo\\\">\\r\\n        <img src=\\\"assets/images/logotipo-negativo.png\\\" alt=\\\"Cronos logo\\\" title=\\\"Cronos logo\\\">\\r\\n    </div> -->\\r\\n    <span class=\\\"title\\\">{{title}}</span>\\r\\n    <div class=\\\"align-right\\\">\\r\\n        <!-- <button class=\\\"ui-button flat icon\\\" uiRipple>\\r\\n            <i class=\\\"material-icons\\\">notifications</i>\\r\\n            <span class=\\\"badge\\\">2</span>\\r\\n        </button> -->\\r\\n        <div class=\\\"avatar\\\"\\r\\n             [uiMenuTrigger]=\\\"menuUser\\\"\\r\\n             menu-align=\\\"right\\\"\\r\\n             theme-class=\\\"menu-user\\\"\\r\\n             [ngStyle]=\\\"{'background-image': user.imagem ? 'url(' + user.imagem + ')' : '',\\r\\n                         'background-color': user.imagem ? 'white' : user.cor,\\r\\n                         'color': isBright(user.cor) ? 'black': 'white'}\\\">\\r\\n            <span *ngIf=\\\"user && !user.imagem && user.nome\\\">{{user.nome.charAt(0)}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-toolbar>\\r\\n\\r\\n<!-- Add class 'persistent' para deixar o menu persistente, deve também descomentar o código no main.component -->\\r\\n<ui-nav-drawer [(open)]=\\\"menuOpen\\\">\\r\\n    <ui-toolbar class=\\\"flat\\\">\\r\\n        <button (click)=\\\"menuOpen = false\\\" class=\\\"ui-button flat icon\\\" uiRipple>\\r\\n            <i class=\\\"material-icons\\\">menu</i>\\r\\n        </button>\\r\\n        <div class=\\\"logo\\\">\\r\\n            <!-- <img src=\\\"assets/images/logotipo-menu.png\\\" alt=\\\"Cronos logo\\\" title=\\\"Cronos logo\\\"> -->\\r\\n        </div>\\r\\n    </ui-toolbar>\\r\\n    <div class=\\\"ui-nav-drawer-overflow\\\">\\r\\n        <div class=\\\"ui-list\\\">\\r\\n            <a class=\\\"ui-list-item\\\" uiRipple routerLink=\\\"/\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Home</a>\\r\\n        </div>\\r\\n        <ui-list [list]=\\\"menu\\\" [item-model]=\\\"menuConfig\\\"></ui-list>\\r\\n    </div>\\r\\n</ui-nav-drawer>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<ui-menu #menuUser>\\r\\n    <header>\\r\\n        <div class=\\\"avatar\\\"\\r\\n             menu-align=\\\"right\\\"\\r\\n             [ngStyle]=\\\"{'background-image': user.imagem ? 'url(' + user.imagem + ')' : '',\\r\\n                         'background-color': user.imagem ? 'white' : user.cor,\\r\\n                         'color': isBright(user.cor) ? 'black': 'white'}\\\">\\r\\n            <span *ngIf=\\\"!user.imagem\\\">{{user.nome?.charAt(0)}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"primary-text\\\">{{user.nome}}</div>\\r\\n    </header>\\r\\n    <div class=\\\"ui-menu-content size-3x\\\">\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple (click)=\\\"logoff()\\\">\\r\\n            Sair\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-menu>\\r\\n\\r\\n\"","module.exports = \":host > /deep/ ui-nav-drawer ui-list .ui-list {\\n  padding: 0; }\\n\\n:host > ui-toolbar .avatar {\\n  width: 36px;\\n  height: 36px;\\n  border-radius: 50%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-position: center;\\n  background-size: cover;\\n  margin: 12px;\\n  cursor: default;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n/deep/ .menu-user header {\\n  display: flex;\\n  align-items: center; }\\n\\n/deep/ .menu-user .avatar {\\n  width: 36px;\\n  height: 36px;\\n  border-radius: 50%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-position: center;\\n  background-size: cover;\\n  margin: 12px;\\n  cursor: default;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\"","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiCookie, UiToolbarService, UiColor } from 'ng-smn-ui';\r\nimport { UserService } from '../../core/utils/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-main',\r\n    templateUrl: './main.component.html',\r\n    styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit, AfterViewInit {\r\n    title: String;\r\n    menuOpen: boolean;\r\n    menuConfig: any;\r\n    menu: any;\r\n    user: any;\r\n\r\n    constructor(private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private router: Router) {\r\n        toolbarService.change.subscribe(title => {\r\n            this.title = title;\r\n        });\r\n\r\n        this.menuConfig = {\r\n            id: '_id',\r\n            parentId: 'idMae',\r\n            url: 'url',\r\n            name: 'nome'\r\n        };\r\n\r\n        this.menu = UserService.getMenu();\r\n        this.user = UserService.getUser();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnifaSystem');\r\n        this.toolbarService.set('');\r\n        this.menuOpen = false;\r\n        this.toolbarService.registerMainToolbar(document.getElementById('app-header'));\r\n        /**\r\n         * Descomentar o código para deixar o menu persistente\r\n         * const isNavDrawerPersistent = UiCookie.get('NavDrawerPersistent') === 'true';\r\n         * if (isNavDrawerPersistent) {\r\n         *      this.menuOpen = true;\r\n         * }\r\n         * */\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    isBright(color) {\r\n        return UiColor.isBright(color);\r\n    }\r\n\r\n    logoff() {\r\n        UserService.remove();\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    getMenu() {\r\n        return [\r\n            {\r\n                id: 1,\r\n                parentId: null,\r\n                url: '/disciplina',\r\n                name: 'Disciplinas'\r\n            },\r\n            {\r\n                id: 2,\r\n                parentId: null,\r\n                url: '/curso',\r\n                name: 'Cursos'\r\n            },\r\n            {\r\n                id: 3,\r\n                parentId: null,\r\n                url: '/professor',\r\n                name: 'Professores'\r\n            },\r\n            {\r\n                id: 4,\r\n                parentId: null,\r\n                url: '/aluno',\r\n                name: 'Alunos'\r\n            },\r\n        ];\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared.module';\r\nimport { MainComponent } from './main.component';\r\nimport { UserService } from '../../core/utils/user/user.service';\r\nimport { HomeModule } from './home/home.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        HomeModule\r\n    ],\r\n    exports: [],\r\n    declarations: [MainComponent],\r\n    providers: [UserService],\r\n})\r\nexport class MainModule {\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { MainComponent } from './main.component';\r\nimport { AuthGuard } from '../auth/guard/auth.guard';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const MAIN_ROUTES: Routes = [{\r\n    path: '',\r\n    component: MainComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n        { path: '', component: HomeComponent }\r\n    ]\r\n}];\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    // Sistema\r\n    SYSTEM_PREFIX: 'medsafe', // Prefixo para indentificar o sistema, usado nos cookies,\r\n    // SMN Auth\r\n    AUTH_API: 'http://localhost:4200', // API do auth\r\n    AUTH_BY_EMAIL: true // O sistema faz o login atráves do e-mail\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}